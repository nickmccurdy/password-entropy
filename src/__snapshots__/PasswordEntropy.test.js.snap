// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`recalculates when length changes 1`] = `
<PasswordEntropy>
  <form>
    <h1>
      Password Entropy
    </h1>
    <label>
      <h2>
        Length
      </h2>
      <input
        min="1"
        name="length"
        onChange={[Function]}
        required={true}
        type="number"
        value={7}
      />
    </label>
    <h2>
      Options
    </h2>
    <Tabs
      defaultFocus={false}
      defaultIndex={null}
      forceRenderTabPanel={false}
      selectedIndex={null}
    >
      <UncontrolledTabs
        className="react-tabs"
        focus={false}
        forceRenderTabPanel={false}
        onSelect={[Function]}
        selectedIndex={0}
      >
        <div
          className="react-tabs"
          data-tabs={true}
          onClick={[Function]}
          onKeyDown={[Function]}
        >
          <TabList
            className="react-tabs__tab-list"
          >
            <ul
              className="react-tabs__tab-list"
              role="tablist"
            >
              <Tab
                className="react-tabs__tab"
                disabledClassName="react-tabs__tab--disabled"
                focus={false}
                id="react-tabs-12"
                panelId="react-tabs-13"
                selected={true}
                selectedClassName="react-tabs__tab--selected"
                tabRef={[Function]}
              >
                <li
                  aria-controls="react-tabs-13"
                  aria-disabled="false"
                  aria-selected="true"
                  className="react-tabs__tab react-tabs__tab--selected"
                  id="react-tabs-12"
                  role="tab"
                  tabIndex="0"
                >
                  Diceware
                </li>
              </Tab>
              <Tab
                className="react-tabs__tab"
                disabledClassName="react-tabs__tab--disabled"
                focus={false}
                id="react-tabs-14"
                panelId="react-tabs-15"
                selected={false}
                selectedClassName="react-tabs__tab--selected"
                tabRef={[Function]}
              >
                <li
                  aria-controls="react-tabs-15"
                  aria-disabled="false"
                  aria-selected="false"
                  className="react-tabs__tab"
                  id="react-tabs-14"
                  role="tab"
                  tabIndex={null}
                >
                  Custom
                </li>
              </Tab>
              <Tab
                className="react-tabs__tab"
                disabledClassName="react-tabs__tab--disabled"
                focus={false}
                id="react-tabs-16"
                panelId="react-tabs-17"
                selected={false}
                selectedClassName="react-tabs__tab--selected"
                tabRef={[Function]}
              >
                <li
                  aria-controls="react-tabs-17"
                  aria-disabled="false"
                  aria-selected="false"
                  className="react-tabs__tab"
                  id="react-tabs-16"
                  role="tab"
                  tabIndex={null}
                >
                  Generic
                </li>
              </Tab>
            </ul>
          </TabList>
          <TabPanel
            className="react-tabs__tab-panel"
            forceRender={false}
            id="react-tabs-13"
            selected={true}
            selectedClassName="react-tabs__tab-panel--selected"
            style={Object {}}
            tabId="react-tabs-12"
          >
            <div
              aria-labelledby="react-tabs-12"
              className="react-tabs__tab-panel react-tabs__tab-panel--selected"
              id="react-tabs-13"
              role="tabpanel"
              style={Object {}}
            >
              <DicewareOptions
                onChange={[Function]}
              >
                <Options
                  onChange={[Function]}
                  possiblePasswords={[Function]}
                >
                  <div>
                    <h3>
                      Diceware
                    </h3>
                  </div>
                </Options>
              </DicewareOptions>
            </div>
          </TabPanel>
          <TabPanel
            className="react-tabs__tab-panel"
            forceRender={false}
            id="react-tabs-15"
            selected={false}
            selectedClassName="react-tabs__tab-panel--selected"
            style={Object {}}
            tabId="react-tabs-14"
          >
            <div
              aria-labelledby="react-tabs-14"
              className="react-tabs__tab-panel"
              id="react-tabs-15"
              role="tabpanel"
              style={Object {}}
            />
          </TabPanel>
          <TabPanel
            className="react-tabs__tab-panel"
            forceRender={false}
            id="react-tabs-17"
            selected={false}
            selectedClassName="react-tabs__tab-panel--selected"
            style={Object {}}
            tabId="react-tabs-16"
          >
            <div
              aria-labelledby="react-tabs-16"
              className="react-tabs__tab-panel"
              id="react-tabs-17"
              role="tabpanel"
              style={Object {}}
            />
          </TabPanel>
        </div>
      </UncontrolledTabs>
    </Tabs>
    <h2>
      Possible Passwords
    </h2>
    ~ 
    1,719,070,799,748,420,000,000,000,000
     (
    ~ 
    90.47
     bits of entropy)
  </form>
</PasswordEntropy>
`;

exports[`recalculates when options change 1`] = `
<PasswordEntropy>
  <form>
    <h1>
      Password Entropy
    </h1>
    <label>
      <h2>
        Length
      </h2>
      <input
        min="1"
        name="length"
        onChange={[Function]}
        required={true}
        type="number"
        value={6}
      />
    </label>
    <h2>
      Options
    </h2>
    <Tabs
      defaultFocus={false}
      defaultIndex={null}
      forceRenderTabPanel={false}
      selectedIndex={null}
    >
      <UncontrolledTabs
        className="react-tabs"
        focus={false}
        forceRenderTabPanel={false}
        onSelect={[Function]}
        selectedIndex={0}
      >
        <div
          className="react-tabs"
          data-tabs={true}
          onClick={[Function]}
          onKeyDown={[Function]}
        >
          <TabList
            className="react-tabs__tab-list"
          >
            <ul
              className="react-tabs__tab-list"
              role="tablist"
            >
              <Tab
                className="react-tabs__tab"
                disabledClassName="react-tabs__tab--disabled"
                focus={false}
                id="react-tabs-18"
                panelId="react-tabs-19"
                selected={true}
                selectedClassName="react-tabs__tab--selected"
                tabRef={[Function]}
              >
                <li
                  aria-controls="react-tabs-19"
                  aria-disabled="false"
                  aria-selected="true"
                  className="react-tabs__tab react-tabs__tab--selected"
                  id="react-tabs-18"
                  role="tab"
                  tabIndex="0"
                >
                  Diceware
                </li>
              </Tab>
              <Tab
                className="react-tabs__tab"
                disabledClassName="react-tabs__tab--disabled"
                focus={false}
                id="react-tabs-20"
                panelId="react-tabs-21"
                selected={false}
                selectedClassName="react-tabs__tab--selected"
                tabRef={[Function]}
              >
                <li
                  aria-controls="react-tabs-21"
                  aria-disabled="false"
                  aria-selected="false"
                  className="react-tabs__tab"
                  id="react-tabs-20"
                  role="tab"
                  tabIndex={null}
                >
                  Custom
                </li>
              </Tab>
              <Tab
                className="react-tabs__tab"
                disabledClassName="react-tabs__tab--disabled"
                focus={false}
                id="react-tabs-22"
                panelId="react-tabs-23"
                selected={false}
                selectedClassName="react-tabs__tab--selected"
                tabRef={[Function]}
              >
                <li
                  aria-controls="react-tabs-23"
                  aria-disabled="false"
                  aria-selected="false"
                  className="react-tabs__tab"
                  id="react-tabs-22"
                  role="tab"
                  tabIndex={null}
                >
                  Generic
                </li>
              </Tab>
            </ul>
          </TabList>
          <TabPanel
            className="react-tabs__tab-panel"
            forceRender={false}
            id="react-tabs-19"
            selected={true}
            selectedClassName="react-tabs__tab-panel--selected"
            style={Object {}}
            tabId="react-tabs-18"
          >
            <div
              aria-labelledby="react-tabs-18"
              className="react-tabs__tab-panel react-tabs__tab-panel--selected"
              id="react-tabs-19"
              role="tabpanel"
              style={Object {}}
            >
              <DicewareOptions
                onChange={[Function]}
              >
                <Options
                  onChange={[Function]}
                  possiblePasswords={[Function]}
                >
                  <div>
                    <h3>
                      Diceware
                    </h3>
                  </div>
                </Options>
              </DicewareOptions>
            </div>
          </TabPanel>
          <TabPanel
            className="react-tabs__tab-panel"
            forceRender={false}
            id="react-tabs-21"
            selected={false}
            selectedClassName="react-tabs__tab-panel--selected"
            style={Object {}}
            tabId="react-tabs-20"
          >
            <div
              aria-labelledby="react-tabs-20"
              className="react-tabs__tab-panel"
              id="react-tabs-21"
              role="tabpanel"
              style={Object {}}
            />
          </TabPanel>
          <TabPanel
            className="react-tabs__tab-panel"
            forceRender={false}
            id="react-tabs-23"
            selected={false}
            selectedClassName="react-tabs__tab-panel--selected"
            style={Object {}}
            tabId="react-tabs-22"
          >
            <div
              aria-labelledby="react-tabs-22"
              className="react-tabs__tab-panel"
              id="react-tabs-23"
              role="tabpanel"
              style={Object {}}
            />
          </TabPanel>
        </div>
      </UncontrolledTabs>
    </Tabs>
    <h2>
      Possible Passwords
    </h2>
    1,000,000
     (
    19.93
     bits of entropy)
  </form>
</PasswordEntropy>
`;

exports[`renders with a larger result 1`] = `
<PasswordEntropy>
  <form>
    <h1>
      Password Entropy
    </h1>
    <label>
      <h2>
        Length
      </h2>
      <input
        min="1"
        name="length"
        onChange={[Function]}
        required={true}
        type="number"
        value={6}
      />
    </label>
    <h2>
      Options
    </h2>
    <Tabs
      defaultFocus={false}
      defaultIndex={null}
      forceRenderTabPanel={false}
      selectedIndex={null}
    >
      <UncontrolledTabs
        className="react-tabs"
        focus={false}
        forceRenderTabPanel={false}
        onSelect={[Function]}
        selectedIndex={0}
      >
        <div
          className="react-tabs"
          data-tabs={true}
          onClick={[Function]}
          onKeyDown={[Function]}
        >
          <TabList
            className="react-tabs__tab-list"
          >
            <ul
              className="react-tabs__tab-list"
              role="tablist"
            >
              <Tab
                className="react-tabs__tab"
                disabledClassName="react-tabs__tab--disabled"
                focus={false}
                id="react-tabs-6"
                panelId="react-tabs-7"
                selected={true}
                selectedClassName="react-tabs__tab--selected"
                tabRef={[Function]}
              >
                <li
                  aria-controls="react-tabs-7"
                  aria-disabled="false"
                  aria-selected="true"
                  className="react-tabs__tab react-tabs__tab--selected"
                  id="react-tabs-6"
                  role="tab"
                  tabIndex="0"
                >
                  Diceware
                </li>
              </Tab>
              <Tab
                className="react-tabs__tab"
                disabledClassName="react-tabs__tab--disabled"
                focus={false}
                id="react-tabs-8"
                panelId="react-tabs-9"
                selected={false}
                selectedClassName="react-tabs__tab--selected"
                tabRef={[Function]}
              >
                <li
                  aria-controls="react-tabs-9"
                  aria-disabled="false"
                  aria-selected="false"
                  className="react-tabs__tab"
                  id="react-tabs-8"
                  role="tab"
                  tabIndex={null}
                >
                  Custom
                </li>
              </Tab>
              <Tab
                className="react-tabs__tab"
                disabledClassName="react-tabs__tab--disabled"
                focus={false}
                id="react-tabs-10"
                panelId="react-tabs-11"
                selected={false}
                selectedClassName="react-tabs__tab--selected"
                tabRef={[Function]}
              >
                <li
                  aria-controls="react-tabs-11"
                  aria-disabled="false"
                  aria-selected="false"
                  className="react-tabs__tab"
                  id="react-tabs-10"
                  role="tab"
                  tabIndex={null}
                >
                  Generic
                </li>
              </Tab>
            </ul>
          </TabList>
          <TabPanel
            className="react-tabs__tab-panel"
            forceRender={false}
            id="react-tabs-7"
            selected={true}
            selectedClassName="react-tabs__tab-panel--selected"
            style={Object {}}
            tabId="react-tabs-6"
          >
            <div
              aria-labelledby="react-tabs-6"
              className="react-tabs__tab-panel react-tabs__tab-panel--selected"
              id="react-tabs-7"
              role="tabpanel"
              style={Object {}}
            >
              <DicewareOptions
                onChange={[Function]}
              >
                <Options
                  onChange={[Function]}
                  possiblePasswords={[Function]}
                >
                  <div>
                    <h3>
                      Diceware
                    </h3>
                  </div>
                </Options>
              </DicewareOptions>
            </div>
          </TabPanel>
          <TabPanel
            className="react-tabs__tab-panel"
            forceRender={false}
            id="react-tabs-9"
            selected={false}
            selectedClassName="react-tabs__tab-panel--selected"
            style={Object {}}
            tabId="react-tabs-8"
          >
            <div
              aria-labelledby="react-tabs-8"
              className="react-tabs__tab-panel"
              id="react-tabs-9"
              role="tabpanel"
              style={Object {}}
            />
          </TabPanel>
          <TabPanel
            className="react-tabs__tab-panel"
            forceRender={false}
            id="react-tabs-11"
            selected={false}
            selectedClassName="react-tabs__tab-panel--selected"
            style={Object {}}
            tabId="react-tabs-10"
          >
            <div
              aria-labelledby="react-tabs-10"
              className="react-tabs__tab-panel"
              id="react-tabs-11"
              role="tabpanel"
              style={Object {}}
            />
          </TabPanel>
        </div>
      </UncontrolledTabs>
    </Tabs>
    <h2>
      Possible Passwords
    </h2>
    ~ 
    221,073,919,720,733,000,000,000
     (
    ~ 
    77.55
     bits of entropy)
  </form>
</PasswordEntropy>
`;

exports[`renders with a smaller result 1`] = `
<PasswordEntropy>
  <form>
    <h1>
      Password Entropy
    </h1>
    <label>
      <h2>
        Length
      </h2>
      <input
        min="1"
        name="length"
        onChange={[Function]}
        required={true}
        type="number"
        value={1}
      />
    </label>
    <h2>
      Options
    </h2>
    <Tabs
      defaultFocus={false}
      defaultIndex={null}
      forceRenderTabPanel={false}
      selectedIndex={null}
    >
      <UncontrolledTabs
        className="react-tabs"
        focus={false}
        forceRenderTabPanel={false}
        onSelect={[Function]}
        selectedIndex={0}
      >
        <div
          className="react-tabs"
          data-tabs={true}
          onClick={[Function]}
          onKeyDown={[Function]}
        >
          <TabList
            className="react-tabs__tab-list"
          >
            <ul
              className="react-tabs__tab-list"
              role="tablist"
            >
              <Tab
                className="react-tabs__tab"
                disabledClassName="react-tabs__tab--disabled"
                focus={false}
                id="react-tabs-0"
                panelId="react-tabs-1"
                selected={true}
                selectedClassName="react-tabs__tab--selected"
                tabRef={[Function]}
              >
                <li
                  aria-controls="react-tabs-1"
                  aria-disabled="false"
                  aria-selected="true"
                  className="react-tabs__tab react-tabs__tab--selected"
                  id="react-tabs-0"
                  role="tab"
                  tabIndex="0"
                >
                  Diceware
                </li>
              </Tab>
              <Tab
                className="react-tabs__tab"
                disabledClassName="react-tabs__tab--disabled"
                focus={false}
                id="react-tabs-2"
                panelId="react-tabs-3"
                selected={false}
                selectedClassName="react-tabs__tab--selected"
                tabRef={[Function]}
              >
                <li
                  aria-controls="react-tabs-3"
                  aria-disabled="false"
                  aria-selected="false"
                  className="react-tabs__tab"
                  id="react-tabs-2"
                  role="tab"
                  tabIndex={null}
                >
                  Custom
                </li>
              </Tab>
              <Tab
                className="react-tabs__tab"
                disabledClassName="react-tabs__tab--disabled"
                focus={false}
                id="react-tabs-4"
                panelId="react-tabs-5"
                selected={false}
                selectedClassName="react-tabs__tab--selected"
                tabRef={[Function]}
              >
                <li
                  aria-controls="react-tabs-5"
                  aria-disabled="false"
                  aria-selected="false"
                  className="react-tabs__tab"
                  id="react-tabs-4"
                  role="tab"
                  tabIndex={null}
                >
                  Generic
                </li>
              </Tab>
            </ul>
          </TabList>
          <TabPanel
            className="react-tabs__tab-panel"
            forceRender={false}
            id="react-tabs-1"
            selected={true}
            selectedClassName="react-tabs__tab-panel--selected"
            style={Object {}}
            tabId="react-tabs-0"
          >
            <div
              aria-labelledby="react-tabs-0"
              className="react-tabs__tab-panel react-tabs__tab-panel--selected"
              id="react-tabs-1"
              role="tabpanel"
              style={Object {}}
            >
              <DicewareOptions
                onChange={[Function]}
              >
                <Options
                  onChange={[Function]}
                  possiblePasswords={[Function]}
                >
                  <div>
                    <h3>
                      Diceware
                    </h3>
                  </div>
                </Options>
              </DicewareOptions>
            </div>
          </TabPanel>
          <TabPanel
            className="react-tabs__tab-panel"
            forceRender={false}
            id="react-tabs-3"
            selected={false}
            selectedClassName="react-tabs__tab-panel--selected"
            style={Object {}}
            tabId="react-tabs-2"
          >
            <div
              aria-labelledby="react-tabs-2"
              className="react-tabs__tab-panel"
              id="react-tabs-3"
              role="tabpanel"
              style={Object {}}
            />
          </TabPanel>
          <TabPanel
            className="react-tabs__tab-panel"
            forceRender={false}
            id="react-tabs-5"
            selected={false}
            selectedClassName="react-tabs__tab-panel--selected"
            style={Object {}}
            tabId="react-tabs-4"
          >
            <div
              aria-labelledby="react-tabs-4"
              className="react-tabs__tab-panel"
              id="react-tabs-5"
              role="tabpanel"
              style={Object {}}
            />
          </TabPanel>
        </div>
      </UncontrolledTabs>
    </Tabs>
    <h2>
      Possible Passwords
    </h2>
    7,776
     (
    12.92
     bits of entropy)
  </form>
</PasswordEntropy>
`;

exports[`renders without valid PossibleItems 1`] = `
<form>
  <h1>
    Password Entropy
  </h1>
  <label>
    <h2>
      Length
    </h2>
    <input
      min="1"
      name="length"
      onChange={[Function]}
      required={true}
      type="number"
      value={6}
    />
  </label>
  <h2>
    Options
  </h2>
  <Tabs
    defaultFocus={false}
    defaultIndex={null}
    forceRenderTabPanel={false}
    selectedIndex={null}
  >
    <TabList
      className="react-tabs__tab-list"
    >
      <Tab
        className="react-tabs__tab"
        disabledClassName="react-tabs__tab--disabled"
        focus={false}
        id={null}
        panelId={null}
        selected={false}
        selectedClassName="react-tabs__tab--selected"
      >
        Diceware
      </Tab>
      <Tab
        className="react-tabs__tab"
        disabledClassName="react-tabs__tab--disabled"
        focus={false}
        id={null}
        panelId={null}
        selected={false}
        selectedClassName="react-tabs__tab--selected"
      >
        Custom
      </Tab>
      <Tab
        className="react-tabs__tab"
        disabledClassName="react-tabs__tab--disabled"
        focus={false}
        id={null}
        panelId={null}
        selected={false}
        selectedClassName="react-tabs__tab--selected"
      >
        Generic
      </Tab>
    </TabList>
    <TabPanel
      className="react-tabs__tab-panel"
      forceRender={false}
      selectedClassName="react-tabs__tab-panel--selected"
      style={Object {}}
    >
      <DicewareOptions
        onChange={[Function]}
      />
    </TabPanel>
    <TabPanel
      className="react-tabs__tab-panel"
      forceRender={false}
      selectedClassName="react-tabs__tab-panel--selected"
      style={Object {}}
    >
      <CustomOptions
        onChange={[Function]}
      />
    </TabPanel>
    <TabPanel
      className="react-tabs__tab-panel"
      forceRender={false}
      selectedClassName="react-tabs__tab-panel--selected"
      style={Object {}}
    >
      <GenericOptions
        onChange={[Function]}
      />
    </TabPanel>
  </Tabs>
  <h2>
    Possible Passwords
  </h2>
  1
   (
  0.00
   bits of entropy)
</form>
`;
